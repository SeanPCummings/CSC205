package Shapes;

public abstract class AbstractShape {
public abstract double area();
public abstract double perimeter();
public abstract double volume();
}
-------------------------------------------------




package Shapes;

import clocks.Clock;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;

public class ShapesGUI {
private GridPane pane;
private Label lengthLabel;
private Label widthLabel;
private Label heightLabel;
private Label radiusLabel;
private TextField lengthTF;
private TextField widthTF;
private TextField heightTF;
private TextField radiusTF;
private Button rectangleButton;
private Button circleButton;
private Button cuboidButton;
private Button sphereButton;
private Label areaLabel;
private Label perimeterLabel;
private Label volumeLabel;
private TextField areaTF;
private TextField perimeterTF;
private TextField volumeTF;
private Button exitButton;
private EventHandler showTimeHandler;
private Scene scene;
public void createGUIComponents() {
pane = new GridPane();
lengthLabel = new Label ("Length");
widthLabel = new Label ("Width");
heightLabel = new Label ("Height");
radiusLabel = new Label ("Radius");
lengthTF = new TextField();
widthTF = new TextField();
heightTF = new TextField();
radiusTF = new TextField();
rectangleButton= new Button("RECTANGLE");
circleButton= new Button("CIRCLE");
cuboidButton= new Button("CUBOID");
sphereButton= new Button("SPHERE");
areaLabel = new Label("Area");
perimeterLabel = new Label("Perimeter");
volumeLabel= new Label("Volume");
areaTF = new TextField();
perimeterTF = new TextField();
volumeTF = new TextField();
exitButton = new Button("EXIT");
pane.add(lengthLabel, 0 , 0);
pane.add(lengthTF, 0, 1);
pane.add(widthLabel, 1, 0);
pane.add(widthTF, 1, 1);
pane.add(heightLabel, 2, 0);
pane.add(heightTF, 2, 3);
pane.add(radiusLabel, 3, 0);
pane.add(radiusTF, 3, 1);
pane.add(rectangleButton, 0, 2);
pane.add(circleButton, 1, 2);
pane.add(cuboidButton, 2, 2);
pane.add(sphereButton, 3, 2);
pane.add(areaLabel, 0, 3);
pane.add(perimeterLabel, 1, 3);
pane.add(volumeLabel, 2, 3);
pane.add(areaTF, 0, 4);
pane.add(perimeterTF, 1 , 4);
pane.add(volumeTF, 2, 4);
pane.add(exitButton, 0, 5);
areaTF.setEditable(false);
perimeterTF.setEditable(false);
volumeTF.setEditable(false);
}
public void attachHandlers() {
rectangleButton.setOnAction(new EventHandler<ActionEvent>());
circleButton.setOnAction(new EventHandler1<ActionEvent>();
{
public void handle(ActionEvent e) {
Clock cl = new Clock();
hoursTF.setText("" +cl.getHour());
minutesTF.setText(""+cl.getMinute());
secondsTF.setText(""+cl.getSecond());
}
}
---------------------------------------------------------------



package Shapes;

class Sphere extends AbstractShape
{
    private double radius;
    public Sphere(double rad) //constructor
    {
       radius = rad;
    }
    public double area()
    {
  double area = 4.0 * Math.PI * radius * radius;
        return area;
    } 
    public double perimeter()
    {
    return 0.0;
    }
    public double volume()
    {
    double vol = (4.0/3) * Math.PI * radius * radius * radius;
         return vol;
    }
}





---------------------------------------------------------------------------
package Shapes;

class Rectangle extends AbstractShape
{
    private double length;
    private double width; 

    public Rectangle(double len, double wid) //constructor
    {  
       length = len;
       width  = wid;
    }
    public double area()
    {
    double area = length * width;
       return area;
    } 
    public double perimeter()
    {
    double perimeter = 2 * (length + width);
   
       return perimeter;
}
    public double volume()
    {
  return 0.0;
}
}

------------------------------------------------------------------------------



package Shapes;

class Circle extends AbstractShape
{
    private double radius;
  
    public Circle(double rad) //constructor
    {             
       radius = rad;      
    }
    public double area()
    {
    double area = Math.PI * radius * radius;
        return area;
    } 
    public double perimeter()
    {
    double perimeter = 2 * Math.PI * radius;

       return perimeter;

}
    public double volume()
    {
  return 0.0;
    }
}
